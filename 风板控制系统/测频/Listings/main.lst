C251 COMPILER V5.60.0,  main                                                               02/08/23  09:14:29  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE main.c LARGE INTR2 ROM(HUGE) BROWSE DEBUG PRINT(.\Listings\main.lst) O
                    -BJECT(.\Objects\main.obj) 

stmt  level    source

    1          #include <STC32G.H>
    2          #include "oled.h"
    3          #include "config.h"
    4          #include <stdio.h>
    5          #include <USART.h>
    6          
    7          u16 cap;                                                                                        // 捕获差值
    8          u32  cap_new;                                                   // 当前捕获计数值
    9          u16 cap_old;                                                                    // 上次捕获计数值
   10          float  freq;                                                            // 方波频率
   11          u8 segdelay;                                                                    // 数码管延时计数
   12          u8 capnums;                                             //捕获次数
   13          u8 count=250;
   14          
   15          char count_oled[50];
   16          
   17          void pwm_init()
   18          {
   19   1      //--------------------------PWMA设置-捕获上升沿----------------------------------       
   20   1              PWMA_ENO = 0x00;                                                // 关闭捕获/输出通道
   21   1              PWMA_CCER1 = 0x00;                                      // 关闭通道
   22   1              PWMA_CCMR1 = 0x01;                                      // 通道模式配置为输入
   23   1              PWMA_SMCR = 0x56;                                         // 输入1，触发模式
   24   1              PWMA_CCER1 = 0x01;                                      // 使能捕获/比较通道1
   25   1              PWMA_CCER1 |= 0x00;                                     // 设置捕获/比较通道1上升沿捕获
   26   1              PWMA_CCER1 |= 0x20;                                     // 设置捕获/比较通道1下降沿捕获
   27   1              
   28   1              PWMA_IER = 0x02;                                                // 使能捕获中断
   29   1              PWMA_CR1 = 0x01;                                                // 启动PWMA定时器
   30   1              
   31   1      //------------PWMB设置-PWM5(P2.0)输出一路PWM：500Hz，占空比：50%-------------------
   32   1      //      PWMB_PSCRH = (u16)(PWMB_PSC >> 8);
   33   1      //      PWMB_PSCRL = (u16)(PWMB_PSC);   // 预分频
   34   1      //      
   35   1      //      PWMB_CCER1 = 0x00;                                      // 关闭通道
   36   1      //      PWMB_CCMR1 = 0x68;                                      // 通道模式配置为输出，PWM模式1
   37   1      //      PWMB_CCER1 = 0x05;                                      // 使能捕获/比较通道1，使能CCR预装载
   38   1      
   39   1      //      PWMB_CCR5H = (u16)(PWMB_PERIOD_500 >> 2 >> 8);
   40   1      //      PWMB_CCR5L = (u16)(PWMB_PERIOD_500 >> 2);       // 设置占空比50%
   41   1      //      
   42   1      //      PWMB_ARRH = (u16)(PWMB_PERIOD_500 >> 8);
   43   1      //      PWMB_ARRL = (u16)(PWMB_PERIOD_500);     // 设置周期
   44   1      //      
   45   1      //      PWMB_ENO = 0x01;                                                // 使能PWM5输出
   46   1      //      PWMB_BKR = 0x80;                                                // 使能PWMB主输出
   47   1      //      PWMB_CR1 |= 0x01;                                       // 使能PWMB计数器
   48   1      }
   49          
   50          
   51          void Timer0_Init(void)          //2毫秒@12.000MHz
   52          {
   53   1              AUXR &= 0x7F;                   //定时器时钟12T模式
   54   1              TMOD &= 0xF0;                   //设置定时器模式
   55   1              TL0 = 0x30;                             //设置定时初始值
   56   1              TH0 = 0xF8;                             //设置定时初始值
   57   1              TF0 = 0;                                //清除TF0标志
   58   1              TR0 = 1;                                //定时器0开始计时
C251 COMPILER V5.60.0,  main                                                               02/08/23  09:14:29  PAGE 2   

   59   1              ET0 = 1;                                //使能定时器0中断
   60   1      }
   61          
   62          void main()
   63          {
   64   1              EAXFR = 1;                                                                      // 使能访问 XFR
   65   1              CKCON = 0x00;                                                   // 设置外部数据总线速度为最快
   66   1              WTST = 0x00;    // 设置程序代码等待参数，赋值为 0 可将 CPU 执行程序的速度设置为最快
   67   1              
   68   1              EA=1;
   69   1              P4M0=0XFF;
   70   1              P4M1=0X00;
   71   1              
   72   1              OLED_Init();
   73   1              pwm_init();
   74   1              Timer0_Init();          //1毫秒@11.0592MHz
   75   1      
   76   1              while(1)
   77   1              {
   78   2                      
   79   2                      sprintf(count_oled,"%d\n",freq);
   80   2                      OLED_ShowNum(1 ,1,freq,8,8);
   81   2                      
   82   2              
   83   2              }
   84   1      }
   85          void Timer0_Isr(void) interrupt 1
   86          {
   87   1              if(count--==0)
   88   1              {
   89   2                      count=250;
   90   2                      freq = (float)((MAIN_Fosc / cap)/0.5);  // 计算方波频率，此处+1是为了加上被舍弃的小数部分
   91   2              }
   92   1      }
   93          void PWM_ISR() interrupt 26
   94          {
   95   1              if (PWMA_SR1 & 0X02)                            // 当捕获中断标志置1
   96   1              {       
   97   2                      PWMA_SR1 &= ~0X02;                              // 清零捕获中断标志
   98   2                      cap_old = cap_new;                              // 更新当前捕获值
   99   2                      cap_new =(PWMA_CCR1H << 8) + PWMA_CCR1L;        // 读取计数值低8位,并合并存入cap_new
  100   2                      cap = cap_new - cap_old;                // 计算两次捕获差值
  101   2                      capnums++;
  102   2                      //if(capnums == 2) PWMA_CCER1 = 0x00;   //关闭捕获/比较通道1
  103   2              }
  104   1      }
  105          
  106          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =         8     ------
  ecode size           =       424     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        63     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
C251 COMPILER V5.60.0,  main                                                               02/08/23  09:14:29  PAGE 3   

  hconst size          =        10     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
