C251 COMPILER V5.60.0,  MPU-6050                                                           16/06/23  16:29:10  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE MPU-6050
OBJECT MODULE PLACED IN .\Objects\MPU-6050.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE MPU-6050.c LARGE INTR2 BROWSE DEBUG PRINT(.\Listings\MPU-6050.lst) OBJ
                    -ECT(.\Objects\MPU-6050.obj) 

stmt  level    source

    1          
    2          #include "MPU6050.H"
    3          
    4          
    5          
    6          sbit    SCL = P2^5 ;            //IIC时钟引脚定义
    7          sbit    SDA = P2^4 ;            //IIC数据引脚定义
    8          
    9          void  InitMPU6050(void);        //初始化MPU6050
   10          void  Delay2us(void);
   11          void  I2C_Start(void);
   12          void  I2C_Stop(void);
   13          
   14          bit   I2C_RecvACK(void);
   15          
   16          void  I2C_SendByte(u8 dat);
   17          u8        I2C_RecvByte(void);
   18          
   19          void  I2C_ReadPage(void);
   20          void  I2C_WritePage(void);
   21          u8        Single_ReadI2C(u8 REG_Address);                               //读取I2C数据
   22          void  Single_WriteI2C(u8 REG_Address,u8 REG_data);      //向I2C写入数据
   23          
   24          
   25          //I^C时序中延时设置，具体参见各芯片的数据手册  6050推荐最小1.3us 但是会出问题，这里延时实际1.9us左右
   26          void Delay2us(void)
   27          {
   28   1              u8 i;
   29   1              i = 7;          // @24MHZ, 6 + 33 = 39T, 1.625us
   30   1              while (--i);
   31   1      }
   32          
   33          //**************************************
   34          //I2C起始信号
   35          //**************************************
   36          void I2C_Start(void)
   37          {
   38   1              Delay2us();                 //延时
   39   1              Delay2us();                 //延时
   40   1              SDA = 1;                    //拉高数据线
   41   1              SCL = 1;                    //拉高时钟线
   42   1              Delay2us();                 //延时
   43   1              Delay2us();                 //延时
   44   1              SDA = 0;                    //产生下降沿
   45   1              Delay2us();                 //延时
   46   1              SCL = 0;                    //拉低时钟线
   47   1              Delay2us();                 //延时
   48   1      }
   49          
   50          //**************************************
   51          //I2C停止信号
   52          //**************************************
   53          void I2C_Stop(void)
   54          {
   55   1          Delay2us();                 //延时
   56   1          SDA = 0;                    //拉低数据线
   57   1          SCL = 1;                    //拉高时钟线
   58   1              Delay2us();                 //延时
C251 COMPILER V5.60.0,  MPU-6050                                                           16/06/23  16:29:10  PAGE 2   

   59   1          SDA = 1;                    //产生上升沿
   60   1              Delay2us();                 //延时
   61   1      }
   62          
   63          //**************************************
   64          //I2C接收应答信号
   65          //**************************************
   66          bit I2C_RecvACK(void)
   67          {
   68   1              SDA = 1;
   69   1              Delay2us();                 //延时
   70   1          SCL = 1;                    //拉高时钟线
   71   1          Delay2us();                 //延时
   72   1          CY = SDA;                   //读应答信号
   73   1          SCL = 0;                    //拉低时钟线
   74   1          Delay2us();                 //延时
   75   1          return CY;
   76   1      }
   77          
   78          //**************************************
   79          //向I2C总线发送一个字节数据
   80          //**************************************
   81          void I2C_SendByte(u8 dat)
   82          {
   83   1          u8 i;
   84   1          for (i=0; i<8; i++)         //8位计数器
   85   1          {
   86   2              dat <<= 1;              //移出数据的最高位
   87   2              SDA = CY;               //送数据口
   88   2              SCL = 1;                //拉高时钟线
   89   2              Delay2us();             //延时
   90   2              SCL = 0;                //拉低时钟线
   91   2              Delay2us();             //延时
   92   2          }
   93   1          I2C_RecvACK();
   94   1      }
   95          
   96          //**************************************
   97          //从I2C总线接收一个字节数据
   98          //**************************************
   99          u8 I2C_RecvByte(void)
  100          {
  101   1          u8 i;
  102   1          u8 dat = 0;
  103   1          SDA = 1;                    //使能内部上拉,准备读取数据,
  104   1          for (i=0; i<8; i++)         //8位计数器
  105   1          {
  106   2              dat <<= 1;
  107   2              SCL = 1;                //拉高时钟线
  108   2              Delay2us();             //延时
  109   2              dat |= SDA;             //读数据
  110   2              SCL = 0;                //拉低时钟线
  111   2              Delay2us();             //延时
  112   2          }
  113   1          return dat;
  114   1      }
  115          
  116          //**************************************
  117          //向I2C设备写入一个字节数据
  118          //**************************************
  119          void Single_WriteI2C(u8 REG_Address,u8 REG_data)
  120          {
  121   1          I2C_Start();                  //起始信号
  122   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
  123   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
  124   1          I2C_SendByte(REG_data);       //内部寄存器数据，
C251 COMPILER V5.60.0,  MPU-6050                                                           16/06/23  16:29:10  PAGE 3   

  125   1          I2C_Stop();                   //发送停止信号
  126   1      }
  127          //**************************************
  128          //从I2C设备读取一个字节数据
  129          //**************************************
  130          
  131          u8 Single_ReadI2C(u8 REG_Address)
  132          {
  133   1              u8 REG_data;
  134   1              I2C_Start();                   //起始信号
  135   1              I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
  136   1              I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始
  137   1              I2C_Start();                   //起始信号
  138   1              I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
  139   1              REG_data=I2C_RecvByte();       //读出寄存器数据
  140   1              
  141   1              SDA = 1;                    //写应答信号
  142   1              SCL = 1;                    //拉高时钟线
  143   1              Delay2us();                 //延时
  144   1              SCL = 0;                    //拉低时钟线
  145   1              Delay2us();                 //延时
  146   1              
  147   1              I2C_Stop();                    //停止信号
  148   1              return REG_data;
  149   1      }
  150          
  151          
  152          //**************************************
  153          //初始化MPU6050
  154          //**************************************
  155          void InitMPU6050(void)
  156          {
  157   1              P2n_open_drain(0x30);           //P2.4 -- SDA,   P2.5 -- SCL
  158   1              Delay2us();
  159   1              Delay2us();
  160   1              Delay2us();
  161   1              Delay2us();
  162   1      
  163   1              Single_WriteI2C(PWR_MGMT_1, 0x00);      //解除休眠状态
  164   1              Single_WriteI2C(SMPLRT_DIV, 0x07);  //陀螺仪125hz
  165   1              Single_WriteI2C(CONFIG, 0x04);      //21HZ滤波 延时A8.5ms G8.3ms  此处取值应相当注意，延时与系统周期相近
             -为宜
  166   1              Single_WriteI2C(GYRO_CONFIG, 0x08); //陀螺仪500度/S 65.5LSB/g
  167   1              Single_WriteI2C(ACCEL_CONFIG, 0x08);//加速度+-4g  8192LSB/g
  168   1      }
  169          
  170          //**************************************
  171          //合成数据
  172          //**************************************
  173          /*
  174          int GetData(u8 REG_Address)
  175          {
  176                  char H,L;
  177                  H = Single_ReadI2C(REG_Address);
  178                  L = Single_ReadI2C(REG_Address+1);
  179          //      return (H<<8)+L;   //合成数据
  180                  return (((u16)H << 8) + L);   //合成数据
  181          }
  182          */
  183          
  184          void Read_MPU6050(u8 *buf)
  185          {
  186   1              u8      i;
  187   1              
  188   1              I2C_Start();                  //起始信号
  189   1              I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
C251 COMPILER V5.60.0,  MPU-6050                                                           16/06/23  16:29:10  PAGE 4   

  190   1              I2C_SendByte(ACCEL_XOUT_H);    //内部寄存器地址，
  191   1              I2C_Start();                   //起始信号
  192   1              I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
  193   1              for(i=0; i<13; i++)
  194   1              {
  195   2                      buf[i] = I2C_RecvByte();       //读出寄存器数据
  196   2                      SDA = 0;                    //写应答信号
  197   2                      SCL = 1;                    //拉高时钟线
  198   2                      Delay2us();                 //延时
  199   2                      SCL = 0;                    //拉低时钟线
  200   2                      Delay2us();                 //延时
  201   2              }
  202   1                      buf[i] = I2C_RecvByte();        //最后一个字节
  203   1                      SDA = 1;                    //写非应答信号
  204   1                      SCL = 1;                    //拉高时钟线
  205   1                      Delay2us();                 //延时
  206   1                      SCL = 0;                    //拉低时钟线
  207   1                      Delay2us();                 //延时
  208   1              I2C_Stop();                    //停止信号
  209   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       390     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------          1
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
