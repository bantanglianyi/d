C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE oled
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE oled.c LARGE INTR2 ROM(HUGE) BROWSE DEBUG PRINT(.\Listings\oled.lst) O
                    -BJECT(.\Objects\oled.obj) 

stmt  level    source

    1          #include "oled.h"
    2          
    3          #include "oledfont.h"    
    4          //OLED的显存
    5          //存放格式如下.
    6          //[0]0 1 2 3 ... 127    
    7          //[1]0 1 2 3 ... 127    
    8          //[2]0 1 2 3 ... 127    
    9          //[3]0 1 2 3 ... 127    
   10          //[4]0 1 2 3 ... 127    
   11          //[5]0 1 2 3 ... 127    
   12          //[6]0 1 2 3 ... 127    
   13          //[7]0 1 2 3 ... 127    
   14          
   15          
   16          void delay_ms(unsigned int us)
   17          {                         
   18   1              while(us--)
   19   1              {
   20   2      //      _nop_();
   21   2      //      _nop_();
   22   2      //      _nop_();
   23   2              }
   24   1      
   25   1      }
   26          
   27          //反显函数
   28          void OLED_ColorTurn(u8 i)
   29          {
   30   1              if(i==0)
   31   1                      {
   32   2                              OLED_WR_Byte(0xA6,OLED_CMD);//正常显示
   33   2                      }
   34   1              if(i==1)
   35   1                      {
   36   2                              OLED_WR_Byte(0xA7,OLED_CMD);//反色显示
   37   2                      }
   38   1      }
   39          
   40          //屏幕旋转180度
   41          void OLED_DisplayTurn(u8 i)
   42          {
   43   1              if(i==0)
   44   1                      {
   45   2                              OLED_WR_Byte(0xC8,OLED_CMD);//正常显示
   46   2                              OLED_WR_Byte(0xA1,OLED_CMD);
   47   2                      }
   48   1              if(i==1)
   49   1                      {
   50   2                              OLED_WR_Byte(0xC0,OLED_CMD);//反转显示
   51   2                              OLED_WR_Byte(0xA0,OLED_CMD);
   52   2                      }
   53   1      }
   54          
   55          
   56          void OLED_WR_Byte(u8 dat,u8 cmd)
   57           {      
   58   1              u8 i;                     
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 2   

   59   1              if(cmd)
   60   1                OLED_DC_Set();
   61   1              else 
   62   1                OLED_DC_Clr();                  
   63   1              OLED_CS_Clr(); 
   64   1              for(i=0;i<8;i++)
   65   1              {                         
   66   2                      OLED_SCL_Clr();
   67   2                      if(dat&0x80)
   68   2                      {
   69   3                       OLED_SDA_Set();
   70   3                      }
   71   2                      else
   72   2                      {
   73   3                       OLED_SDA_Clr();
   74   3                      }
   75   2                OLED_SCL_Set();
   76   2                      dat<<=1;   
   77   2              }                                                 
   78   1              OLED_CS_Set();
   79   1              OLED_DC_Set();            
   80   1      } 
   81          
   82          //坐标设置
   83          
   84          void OLED_Set_Pos(u8 x, u8 y) 
   85          { 
   86   1              OLED_WR_Byte(0xb0+y,OLED_CMD);
*** WARNING C188 IN LINE 86 OF oled.c: 'parameter 1': value truncated
   87   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
   88   1              OLED_WR_Byte((x&0x0f),OLED_CMD);
   89   1      }         
   90          //开启OLED显示    
   91          void OLED_Display_On(void)
   92          {
   93   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
   94   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
   95   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
   96   1      }
   97          //关闭OLED显示     
   98          void OLED_Display_Off(void)
   99          {
  100   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  101   1              OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
  102   1              OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
  103   1      }                                        
  104          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!        
  105          void OLED_Clear(void)  
  106          { 
  107   1              // printf("clear")
  108   1              u8 i,n;
  109   1              // 0: 正在清屏，1：可以渲染
  110   1      //      if(accomplish==0)
  111   1      //      {
  112   1      //              return;
  113   1      //      }else{
  114   1      //              accomplish=0;
  115   1                      for(i=0;i<8;i++)  
  116   1                      {  
  117   2                              OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
*** WARNING C188 IN LINE 117 OF oled.c: 'parameter 1': value truncated
  118   2                              OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
  119   2                              OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
  120   2                              for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
  121   2                      }
  122   1      //              accomplish=1;
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 3   

  123   1      //      }
  124   1              // printf("clear finished")
  125   1      }
  126          
  127          //在指定位置显示一个字符,包括部分字符
  128          //x:0~127
  129          //y:0~63                                 
  130          //sizey:选择字体 6x8  8x16
  131          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 sizey)
  132          {       
  133   1              u8 c=0,sizex=sizey/2;
  134   1              u16 i=0,size1;
  135   1              if(sizey==8)size1=6;
  136   1              else size1=(sizey/8+((sizey%8)?1:0))*(sizey/2);
  137   1              c=chr-' ';//得到偏移后的值
  138   1              OLED_Set_Pos(x,y);
  139   1              for(i=0;i<size1;i++)
  140   1              {
  141   2                      if(i%sizex==0&&sizey!=8) OLED_Set_Pos(x,y++);
  142   2                      if(sizey==8) OLED_WR_Byte(asc2_0806[c][i],OLED_DATA);//6X8字号
  143   2                      else if(sizey==16) OLED_WR_Byte(asc2_1608[c][i],OLED_DATA);//8x16字号
  144   2      //              else if(sizey==xx) OLED_WR_Byte(asc2_xxxx[c][i],OLED_DATA);//用户添加字号
  145   2                      else return;
  146   2              }
  147   1      }
  148          //m^n函数
  149          u32 oled_pow(u8 m,u8 n)
  150          {
  151   1              u32 result=1;    
  152   1              while(n--)result*=m;    
  153   1              return result;
  154   1      }                                 
  155          //显示数字
  156          //x,y :起点坐标
  157          //num:要显示的数字
  158          //len :数字的位数
  159          //sizey:字体大小                  
  160          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 sizey)
  161          {               
  162   1              u8 t,temp,m=0;
  163   1              u8 enshow=0;
  164   1              if(sizey==8)m=2;
  165   1              for(t=0;t<len;t++)
  166   1              {
  167   2                      temp=(num/oled_pow(10,len-t-1))%10;
*** WARNING C188 IN LINE 167 OF oled.c: 'parameter 2': value truncated
  168   2                      if(enshow==0&&t<(len-1))
  169   2                      {
  170   3                              if(temp==0)
  171   3                              {
  172   4                                      OLED_ShowChar(x+(sizey/2+m)*t,y,' ',sizey);
*** WARNING C188 IN LINE 172 OF oled.c: 'parameter 1': value truncated
  173   4                                      continue;
  174   4                              }else enshow=1;
  175   3                      }
  176   2                      OLED_ShowChar(x+(sizey/2+m)*t,y,temp+'0',sizey);
*** WARNING C188 IN LINE 176 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 176 OF oled.c: 'parameter 3': value truncated
  177   2              }
  178   1      }
  179          //显示一个字符号串
  180          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 sizey)
  181          {
  182   1              u8 j=0;
  183   1              while (chr[j]!='\0')
  184   1              {               
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 4   

  185   2                      OLED_ShowChar(x,y,chr[j++],sizey);
  186   2                      if(sizey==8)x+=6;
  187   2                      else x+=sizey/2;
  188   2              }
  189   1      }
  190          //显示汉字
  191          void OLED_ShowChinese(u8 x,u8 y,u8 no,u8 sizey)
  192          {
  193   1              u16 i,size1=(sizey/8+((sizey%8)?1:0))*sizey;
  194   1              for(i=0;i<size1;i++)
  195   1              {
  196   2                      if(i%sizey==0) OLED_Set_Pos(x,y++);
  197   2                      if(sizey==16) OLED_WR_Byte(Hzk[no][i],OLED_DATA);//16x16字号
  198   2      //              else if(sizey==xx) OLED_WR_Byte(xxx[c][i],OLED_DATA);//用户添加字号
  199   2                      else return;
  200   2              }                               
  201   1      }
  202          
  203          
  204          //显示图片
  205          //x,y显示坐标
  206          //sizex,sizey,图片长宽
  207          //BMP：要显示的图片
  208          void OLED_DrawBMP(u8 x,u8 y,u8 sizex, u8 sizey, unsigned long BMP[])
  209          {       
  210   1        u16 j=0;
  211   1              u8 i,m;
  212   1              sizey=sizey/8+((sizey%8)?1:0);
  213   1              for(i=0;i<sizey;i++)
  214   1              {
  215   2                      OLED_Set_Pos(x,i+y);
*** WARNING C188 IN LINE 215 OF oled.c: 'parameter 2': value truncated
  216   2          for(m=0;m<sizex;m++)
  217   2                      {      
  218   3                              OLED_WR_Byte(BMP[j++],OLED_DATA);               
*** WARNING C188 IN LINE 218 OF oled.c: 'parameter 1': value truncated
  219   3                      }
  220   2              }
  221   1      } 
  222          
  223          
  224          void Draw_Hline(unsigned char x0,unsigned char y0,unsigned char x,unsigned int time)//画横线
  225          {       
  226   1              unsigned char y,mod,pos,i;
  227   1              if(y0%8==0){
  228   2                       y=y0/8;
  229   2                       pos = 0x01;
  230   2              }
  231   1              else{
  232   2                      y = y0/8;
  233   2                      mod = y0%8;
  234   2                      switch(mod)
  235   2                      {
  236   3                              case 1:
  237   3                              pos = 0x02;
  238   3                              break;
  239   3                              case 2:
  240   3                              pos = 0x04;
  241   3                              break;
  242   3                              case 3:
  243   3                              pos = 0x08;
  244   3                              break;
  245   3                              case 4:
  246   3                              pos = 0x10;
  247   3                              break;
  248   3                              case 5:
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 5   

  249   3                              pos = 0x20;
  250   3                              break;
  251   3                              case 6:
  252   3                              pos = 0x40;
  253   3                              break;
  254   3                              case 7:
  255   3                              pos = 0x80;
  256   3                              break;
  257   3                              default:
  258   3                              break;
  259   3      
  260   3                      }
  261   2              }
  262   1              OLED_Set_Pos(x0,y);
  263   1              for(i=x0;i<x+1;i++)
  264   1              {
  265   2                      delay_ms(time);
  266   2                      OLED_WR_Byte(pos,1);    
  267   2              }
  268   1      
  269   1      }
  270          
  271          void Draw_Vline(unsigned char x0,unsigned char y0,unsigned char y,unsigned int time)//画竖线
  272          {       
  273   1              unsigned char y1,y2,pos,pos1,mod0,mod1,i;
  274   1                      if(y0%8==0){
  275   2                       y1=y0/8;
  276   2                       pos = 0xff;
  277   2              }
  278   1              else{
  279   2                      y1 = y0/8;
  280   2                      mod0 = y0%8;
  281   2                      switch(mod0)
  282   2                      {
  283   3                              case 1:
  284   3                              pos = 0xfe;
  285   3                              break;
  286   3                              case 2:
  287   3                              pos = 0xfc;
  288   3                              break;
  289   3                              case 3:
  290   3                              pos = 0xf8;
  291   3                              break;
  292   3                              case 4:
  293   3                              pos = 0x10;
  294   3                              break;
  295   3                              case 5:
  296   3                              pos = 0xe0;
  297   3                              break;
  298   3                              case 6:
  299   3                              pos = 0xc0;
  300   3                              break;
  301   3                              case 7:
  302   3                              pos = 0x80;
  303   3                              break;
  304   3                              default:
  305   3                              break;
  306   3      
  307   3                      }
  308   2              }
  309   1              if(y%8==0){
  310   2                       y2=y/8;
  311   2                       pos1 = 0x01;
  312   2              }
  313   1              else{
  314   2                      y2 = y/8;
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 6   

  315   2                      mod1 = y%8;
  316   2                      switch(mod1)
  317   2                      {
  318   3                              case 1:
  319   3                              pos1 = 0x03;
  320   3                              break;
  321   3                              case 2:
  322   3                              pos1 = 0x07;
  323   3                              break;
  324   3                              case 3:
  325   3                              pos1 = 0x0f;
  326   3                              break;
  327   3                              case 4:
  328   3                              pos1 = 0x1f;
  329   3                              break;
  330   3                              case 5:
  331   3                              pos1 = 0x3f;
  332   3                              break;
  333   3                              case 6:
  334   3                              pos1 = 0x7f;
  335   3                              break;
  336   3                              case 7:
  337   3                              pos1 = 0xff;
  338   3                              break;
  339   3                              default:
  340   3                              break;
  341   3      
  342   3                      }
  343   2              }
  344   1              OLED_Set_Pos(x0,y1);
  345   1              OLED_WR_Byte(pos,1);
  346   1                      delay_ms(time);
  347   1              OLED_Set_Pos(x0,y1+1);
*** WARNING C188 IN LINE 347 OF oled.c: 'parameter 2': value truncated
  348   1              for(i=y1+1;i<y2;i++)
  349   1              {
  350   2                              delay_ms(time);
  351   2                      OLED_Set_Pos(x0,i);
  352   2                      OLED_WR_Byte(0xff,1);   
  353   2              } 
  354   1              OLED_Set_Pos(x0,y2);
  355   1                      delay_ms(time);
  356   1              OLED_WR_Byte(pos1,1);
  357   1      
  358   1      
  359   1      }
  360          void Clear(unsigned char y0,unsigned char y,unsigned char x0,unsigned int time){        
  361   1              unsigned char y1,y2,pos,pos1,mod0,mod1,i;
  362   1                      if(y0%8==0){
  363   2                       y1=y0/8;
  364   2                       pos = 0x00;
  365   2              }
  366   1              else{
  367   2                      y1 = y0/8;
  368   2                      mod0 = y0%8;
  369   2                      switch(mod0)
  370   2                      {
  371   3                              case 1:
  372   3                              pos = 0xfe;
  373   3                              break;
  374   3                              case 2:
  375   3                              pos = 0xfc;
  376   3                              break;
  377   3                              case 3:
  378   3                              pos = 0xf8;
  379   3                              break;
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 7   

  380   3                              case 4:
  381   3                              pos = 0x10;
  382   3                              break;
  383   3                              case 5:
  384   3                              pos = 0xe0;
  385   3                              break;
  386   3                              case 6:
  387   3                              pos = 0xc0;
  388   3                              break;
  389   3                              case 7:
  390   3                              pos = 0x80;
  391   3                              break;
  392   3                              default:
  393   3                              break;
  394   3      
  395   3                      }
  396   2              }
  397   1              if(y%8==0){
  398   2                       y2=y/8;
  399   2                       pos1 = 0x01;
  400   2              }
  401   1              else{
  402   2                      y2 = y/8;
  403   2                      mod1 = y%8;
  404   2                      switch(mod1)
  405   2                      {
  406   3                              case 1:
  407   3                              pos1 = 0x03;
  408   3                              break;
  409   3                              case 2:
  410   3                              pos1 = 0x07;
  411   3                              break;
  412   3                              case 3:
  413   3                              pos1 = 0x0f;
  414   3                              break;
  415   3                              case 4:
  416   3                              pos1 = 0x1f;
  417   3                              break;
  418   3                              case 5:
  419   3                              pos1 = 0x3f;
  420   3                              break;
  421   3                              case 6:
  422   3                              pos1 = 0x7f;
  423   3                              break;
  424   3                              case 7:
  425   3                              pos1 = 0xff;
  426   3                              break;
  427   3                              default:
  428   3                              break;
  429   3      
  430   3                      }
  431   2              }
  432   1              OLED_Set_Pos(x0,y1);
  433   1              OLED_WR_Byte(pos,1);
  434   1              delay_ms(time*8);
  435   1              OLED_Set_Pos(x0,y1+1);
*** WARNING C188 IN LINE 435 OF oled.c: 'parameter 2': value truncated
  436   1              for(i=y1+1;i<y2;i++)
  437   1              {
  438   2                      delay_ms(time*8);
  439   2                      OLED_Set_Pos(x0,i);
  440   2                      OLED_WR_Byte(0x00,1);   
  441   2              } 
  442   1              OLED_Set_Pos(x0,y2);
  443   1              delay_ms(time*8);
  444   1              OLED_WR_Byte(pos1,1);
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 8   

  445   1      
  446   1      
  447   1      }
  448          
  449          void Draw_VlineF(unsigned char y0,unsigned char y,unsigned char x0,unsigned int time)//反向竖线
  450          {       
  451   1              unsigned char y1,y2,pos,pos1,mod0,mod1,i;
  452   1                      if(y0%8==0){
  453   2                       y1=y0/8;
  454   2                       pos = 0xff;
  455   2              }
  456   1              else{
  457   2                      y1 = y0/8;
  458   2                      mod0 = y0%8;
  459   2                      switch(mod0)
  460   2                      {
  461   3                              case 1:
  462   3                              pos = 0xfe;
  463   3                              break;
  464   3                              case 2:
  465   3                              pos = 0xfc;
  466   3                              break;
  467   3                              case 3:
  468   3                              pos = 0xf8;
  469   3                              break;
  470   3                              case 4:
  471   3                              pos = 0x10;
  472   3                              break;
  473   3                              case 5:
  474   3                              pos = 0xe0;
  475   3                              break;
  476   3                              case 6:
  477   3                              pos = 0xc0;
  478   3                              break;
  479   3                              case 7:
  480   3                              pos = 0x80;
  481   3                              break;
  482   3                              default:
  483   3                              break;
  484   3      
  485   3                      }
  486   2              }
  487   1              if(y%8==0){
  488   2                       y2=y/8;
  489   2                       pos1 = 0x01;
  490   2              }
  491   1              else{
  492   2                      y2 = y/8;
  493   2                      mod1 = y%8;
  494   2                      switch(mod1)
  495   2                      {
  496   3                              case 1:
  497   3                              pos1 = 0x03;
  498   3                              break;
  499   3                              case 2:
  500   3                              pos1 = 0x07;
  501   3                              break;
  502   3                              case 3:
  503   3                              pos1 = 0x0f;
  504   3                              break;
  505   3                              case 4:
  506   3                              pos1 = 0x1f;
  507   3                              break;
  508   3                              case 5:
  509   3                              pos1 = 0x3f;
  510   3                              break;
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 9   

  511   3                              case 6:
  512   3                              pos1 = 0x7f;
  513   3                              break;
  514   3                              case 7:
  515   3                              pos1 = 0xff;
  516   3                              break;
  517   3                              default:
  518   3                              break;
  519   3      
  520   3                      }
  521   2              }
  522   1              OLED_Set_Pos(x0,y2);
  523   1              OLED_WR_Byte(pos1,1);
  524   1              delay_ms(time);
  525   1              OLED_Set_Pos(x0,y1+1);
*** WARNING C188 IN LINE 525 OF oled.c: 'parameter 2': value truncated
  526   1              for(i=y2-1;i>y1;i--)
  527   1              {
  528   2                      delay_ms(time);
  529   2                      OLED_Set_Pos(x0,i);
  530   2                      OLED_WR_Byte(0xff,1);   
  531   2              } 
  532   1              OLED_Set_Pos(x0,y1);
  533   1              delay_ms(time);
  534   1              OLED_WR_Byte(pos,1);
  535   1      
  536   1      
  537   1      }
  538          
  539          void Draw_Rectangle(unsigned char x0,unsigned char y0,unsigned char x,unsigned char y,unsigned int time)/
             -/画矩形
  540          {
  541   1               Draw_Hline(x0,x-1,y0,time);
*** WARNING C188 IN LINE 541 OF oled.c: 'parameter 2': value truncated
  542   1      
  543   1               Draw_Vline(y0,y,x,time*8);
  544   1      
  545   1               Draw_Hline(x0+1,x-1,y,time);
*** WARNING C188 IN LINE 545 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 545 OF oled.c: 'parameter 2': value truncated
  546   1      
  547   1               Draw_VlineF(y0,y,x0,time*8);
  548   1      
  549   1      
  550   1      }/*
  551          void Draw_RectangleF(unsigned char x0,unsigned char y0,unsigned char x,unsigned char y,unsigned int time)
  552          {
  553                   Draw_Hline(x0,x-1,y0,time);
  554                   Delay_50ms(10);
  555                   Draw_Vline(y0,y,x0,time);
  556                   Delay_50ms(10);
  557                   Draw_Hline(x0+1,x-1,y,time);
  558                   Delay_50ms(10);
  559                   Draw_VlineF(y0,y,x,time);
  560                   Delay_50ms(10);
  561          
  562          }
  563          */
  564          void Setpos(unsigned char x0,unsigned char y0)
  565          {
  566   1              unsigned char y,mod,pos;
  567   1              if(y0%8==0){
  568   2                       y=y0/8;
  569   2                       pos = 0x01;
  570   2              }
  571   1              else{
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 10  

  572   2                      y = y0/8;
  573   2                      mod = y0%8;
  574   2                      switch(mod)
  575   2                      {
  576   3                              case 1:
  577   3                              pos = 0x02;
  578   3                              break;
  579   3                              case 2:
  580   3                              pos = 0x04;
  581   3                              break;
  582   3                              case 3:
  583   3                              pos = 0x08;
  584   3                              break;
  585   3                              case 4:
  586   3                              pos = 0x10;
  587   3                              break;
  588   3                              case 5:
  589   3                              pos = 0x20;
  590   3                              break;
  591   3                              case 6:
  592   3                              pos = 0x40;
  593   3                              break;
  594   3                              case 7:
  595   3                              pos = 0x80;
  596   3                              break;
  597   3                              default:
  598   3                              break;
  599   3      
  600   3                      }
  601   2              }
  602   1              OLED_Set_Pos(x0,y);
  603   1              OLED_WR_Byte(pos,1);
  604   1      
  605   1      }
  606          
  607          void OLED_DrawLine(int x1,int y1,int x2,int y2) //任意方向直线
  608          {
  609   1          int dx,dy,e;
  610   1          dx=x2-x1; 
  611   1          dy=y2-y1;
  612   1          if(dx>=0)
  613   1          {
  614   2              if(dy >= 0) // dy>=0
  615   2              {
  616   3                  if(dx>=dy) // 1/8 octant
  617   3                  {
  618   4                      e=dy-dx/2;
  619   4                      while(x1<=x2)
  620   4                      {
  621   5                          Setpos(x1,y1);
*** WARNING C188 IN LINE 621 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 621 OF oled.c: 'parameter 2': value truncated
  622   5                          if(e>0){y1+=1;e-=dx;}   
  623   5                          x1+=1;
  624   5                          e+=dy;
  625   5                      }
  626   4                  }
  627   3                  else        // 2/8 octant
  628   3                  {
  629   4                      e=dx-dy/2;
  630   4                      while(y1<=y2)
  631   4                      {
  632   5                          Setpos(x1,y1);
*** WARNING C188 IN LINE 632 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 632 OF oled.c: 'parameter 2': value truncated
  633   5                          if(e>0){x1+=1;e-=dy;}   
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 11  

  634   5                          y1+=1;
  635   5                          e+=dx;
  636   5                      }
  637   4                  }
  638   3              }
  639   2              else           // dy<0
  640   2              {
  641   3                  dy=-dy;   // dy=abs(dy)
  642   3                  if(dx>=dy) // 8/8 octant
  643   3                  {
  644   4                      e=dy-dx/2;
  645   4                      while(x1<=x2)
  646   4                      {
  647   5                          Setpos(x1,y1);
*** WARNING C188 IN LINE 647 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 647 OF oled.c: 'parameter 2': value truncated
  648   5                          if(e>0){y1-=1;e-=dx;}   
  649   5                          x1+=1;
  650   5                          e+=dy;
  651   5                      }
  652   4                  }
  653   3                  else        // 7/8 octant
  654   3                  {
  655   4                      e=dx-dy/2;
  656   4                      while(y1>=y2)
  657   4                      {
  658   5                          Setpos(x1,y1);
*** WARNING C188 IN LINE 658 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 658 OF oled.c: 'parameter 2': value truncated
  659   5                          if(e>0){x1+=1;e-=dy;}   
  660   5                          y1-=1;
  661   5                          e+=dx;
  662   5                      }
  663   4                  }
  664   3              }   
  665   2          }
  666   1          else //dx<0
  667   1          {
  668   2              dx=-dx;     //dx=abs(dx)
  669   2              if(dy >= 0) // dy>=0
  670   2              {
  671   3                  if(dx>=dy) // 4/8 octant
  672   3                  {
  673   4                      e=dy-dx/2;
  674   4                      while(x1>=x2)
  675   4                      {
  676   5                          Setpos(x1,y1);
*** WARNING C188 IN LINE 676 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 676 OF oled.c: 'parameter 2': value truncated
  677   5                          if(e>0){y1+=1;e-=dx;}   
  678   5                          x1-=1;
  679   5                          e+=dy;
  680   5                      }
  681   4                  }
  682   3                  else        // 3/8 octant
  683   3                  {
  684   4                      e=dx-dy/2;
  685   4                      while(y1<=y2)
  686   4                      {
  687   5                        Setpos(x1,y1);
*** WARNING C188 IN LINE 687 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 687 OF oled.c: 'parameter 2': value truncated
  688   5      
  689   5                          if(e>0){x1-=1;e-=dy;}   
  690   5                          y1+=1;
  691   5                          e+=dx;
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 12  

  692   5                      }
  693   4                  }
  694   3              }
  695   2              else           // dy<0
  696   2              {
  697   3                  dy=-dy;   // dy=abs(dy)
  698   3                  if(dx>=dy) // 5/8 octant
  699   3                  {
  700   4                      e=dy-dx/2;
  701   4                      while(x1>=x2)
  702   4                      {
  703   5                         Setpos(x1,y1);
*** WARNING C188 IN LINE 703 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 703 OF oled.c: 'parameter 2': value truncated
  704   5                          if(e>0){y1-=1;e-=dx;}   
  705   5                          x1-=1;
  706   5                          e+=dy;
  707   5                      }
  708   4                  }
  709   3                  else        // 6/8 octant
  710   3                  {
  711   4                      e=dx-dy/2;
  712   4                      while(y1>=y2)
  713   4                      {
  714   5                         Setpos(x1,y1);
*** WARNING C188 IN LINE 714 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 714 OF oled.c: 'parameter 2': value truncated
  715   5                          if(e>0){x1-=1;e-=dy;}   
  716   5                          y1-=1;
  717   5                          e+=dx;
  718   5                      }
  719   4                  }
  720   3              }   
  721   2          }
  722   1      }
  723          
  724          void Draw_dimond(unsigned char x0,unsigned char y0,unsigned char R)//画棱形
  725          {
  726   1              unsigned char xi,yi,di;
  727   1              di = 0-(R>>1);
  728   1              xi = 0;
  729   1              yi = R;
  730   1              while(yi>=xi)
  731   1              {
  732   2                      Setpos(x0+xi-1,y0+yi-1);
*** WARNING C188 IN LINE 732 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 732 OF oled.c: 'parameter 2': value truncated
  733   2                      Setpos(x0+yi-1,y0+xi-1);
*** WARNING C188 IN LINE 733 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 733 OF oled.c: 'parameter 2': value truncated
  734   2                      Setpos(x0-xi,y0+yi-1);
*** WARNING C188 IN LINE 734 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 734 OF oled.c: 'parameter 2': value truncated
  735   2                      Setpos(x0-yi,y0+xi-1);
*** WARNING C188 IN LINE 735 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 735 OF oled.c: 'parameter 2': value truncated
  736   2                      Setpos(x0-xi,y0-yi);
*** WARNING C188 IN LINE 736 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 736 OF oled.c: 'parameter 2': value truncated
  737   2                      Setpos(x0-yi,y0-xi);
*** WARNING C188 IN LINE 737 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 737 OF oled.c: 'parameter 2': value truncated
  738   2                      Setpos(x0+xi-1,y0-yi);
*** WARNING C188 IN LINE 738 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 738 OF oled.c: 'parameter 2': value truncated
  739   2                      Setpos(x0+yi-1,y0-xi);
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 13  

*** WARNING C188 IN LINE 739 OF oled.c: 'parameter 1': value truncated
*** WARNING C188 IN LINE 739 OF oled.c: 'parameter 2': value truncated
  740   2                      xi++;
  741   2                      if(di<0)
  742   2                      {
  743   3                              di+=xi;
  744   3      
  745   3                      }
  746   2                      else {
  747   3                              yi--;
  748   3                              di+=xi-yi;
  749   3                      }       
  750   2              }
  751   1      }
  752          
  753          
  754          
  755          
  756          
  757          
  758          
  759          //初始化                                    
  760          void OLED_Init(void)
  761          {
  762   1              OLED_RES_Clr();
  763   1              delay_ms(200);
  764   1              OLED_RES_Set();
  765   1              
  766   1              OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
  767   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
  768   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
  769   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
  770   1              OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
  771   1              OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
  772   1              OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
  773   1              OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
  774   1              OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
  775   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
  776   1              OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
  777   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset       Shift Mapping RAM Counter (0x00~0x3F)
  778   1              OLED_WR_Byte(0x00,OLED_CMD);//-not offset
  779   1              OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
  780   1              OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
  781   1              OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
  782   1              OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
  783   1              OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
  784   1              OLED_WR_Byte(0x12,OLED_CMD);
  785   1              OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
  786   1              OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
  787   1              OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
  788   1              OLED_WR_Byte(0x02,OLED_CMD);//
  789   1              OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
  790   1              OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
  791   1              OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
  792   1              OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
  793   1              OLED_Clear();
  794   1              OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
  795   1      }
  796          
  797          
  798          
  799          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      2136     ------
C251 COMPILER V5.60.0,  oled                                                               19/07/23  00:24:02  PAGE 14  

  ecode size           =      4068     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------         56
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  46 WARNING(S),  0 ERROR(S)
