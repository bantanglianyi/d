C251 COMPILER V5.60.0,  main                                                               09/07/23  21:34:07  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE main.c LARGE INTR2 BROWSE DEBUG PRINT(.\Listings\main.lst) OBJECT(.\Ob
                    -jects\main.obj) 

stmt  level    source

    1          #include <STC32G.H>
    2          #include "oled.h"
    3          #include <stdio.h>
    4          #include "USART.H"
    5          #include "ADC.h"
    6          #include "pwm.h"
    7          #include "key_multi.h"
    8          
    9          float attenuation=10.0946;//Ë¥¼õ±¶Êý
   10          char group_V[50]; //adcÊä³ö³ÐÔØÊý×é
   11          char group_A[50]; //adcÊä³ö³ÐÔØÊý×é
   12          char i;
   13          unsigned char ftable[50];
   14          float out_V,out,measurement_1,measurement_2,measurement_3,measurement_4,measurement_5,reference; //adcµÄ³
             -ÐÔØ±äÁ¿
   15          char minification,count_v;
   16          float v=0;
   17          unsigned int PWM1_Duty;//¸ßµãÆ½µÄ³ÖÐøÊ±¼ä£¬ÓÃÓÚ¸Ä±äÕ¼¿Õ±È
   18          unsigned int PWM2_Duty;
   19          unsigned int PWM3_Duty;
   20          unsigned int PWM4_Duty;
   21          
   22          unsigned char Key1_nums,Key2_nums,Key3_nums,Key4_nums;          //KEY1Ë«»÷´ÎÊý£¬KEY2Ë«»÷´ÎÊý£¬KEY3Ë«»÷´ÎÊý£¬KEY4Ë
             -«»÷´ÎÊý
   23          unsigned char keyvalue; 
   24          char pattern=0; //¼üÖµ
   25          char pwm_pattern=0;//pwmÇÐ»»±äÁ¿
   26          char ol_control=0; //ol¿Ú¿ØÖÆ
   27          
   28          
   29          
   30          
   31                  void Delay10us()                //@12.000MHz
   32          {
   33   1              unsigned long edata r;
   34   1      
   35   1              _nop_();
   36   1              _nop_();
   37   1              _nop_();
   38   1              r = 28000UL;
   39   1              while (r) r--;
   40   1      }
   41          
   42          
   43          void adc_voltage_0ut() //adc²âµçÑ¹
   44          {
   45   1                      float err=0;
   46   1                      long N=10000;
   47   1                      unsigned long count;
   48   1                      float sum=0;
   49   1                      count_v=2.011;
   50   1                      /*ÏÔÊ¾µçÑ¹²âÊÔÄ£Ê½*/
   51   1                      OLED_ShowChinese(0,0,9,16);
   52   1                      OLED_ShowChinese(16,0,10,16);
   53   1                      OLED_ShowChinese(32,0,11,16);
   54   1                      OLED_ShowChinese(48,0,12,16);
   55   1                      OLED_ShowChinese(64,0,13,16);
   56   1                      OLED_ShowChinese(80,0,14,16);
C251 COMPILER V5.60.0,  main                                                               09/07/23  21:34:07  PAGE 2   

   57   1                      /*¿ªÆôADCÍ¨µÀ*/
   58   1                      measurement_2=Get_ADC12bitResult(3);//adc 4Í¨µÀ
   59   1                      measurement_3=Get_ADC12bitResult(4);//adc 5Í¨µÀ
   60   1                      measurement_4=Get_ADC12bitResult(5);//adc 6Í¨µÀ
   61   1                      /*ÅÐ¶ÏÊ¹ÓÃÍ¨µÀ*/
   62   1                      reference=Get_ADC12bitResult(15);//adcÄÚ²¿²Î¿¼Í¨µÀ//
   63   1                      out_V   =(float)(((measurement_2/reference*1.182937))/count_v*attenuation);     //¾­¹ý¼ÆËãµÄadc×îÖÕÊä³ö
   64   1                      //printf("%.6f\n",out_V); //´®¿Úadcµ÷ÊÔ
   65   1                 for ( count=0;count<N;count++)
   66   1                 {
   67   2                      
   68   2                               if(pattern!=2)
   69   2                               {
   70   3                                      goto A;
   71   3                               }
   72   2                              sum += out_V;
   73   2                 }
   74   1                      out=(float)(sum/N);
   75   1                      if(out>13.9)err=0.08;
   76   1                 if(out>4.9|out<13.9)err=0.03;
   77   1                 if(out<4.9)err=0.02;
   78   1                 if(out<0.3)
   79   1                 {
   80   2                              out=0;
   81   2                              err=0;
   82   2                 }
   83   1                      sprintf(group_V,"v:%.2f",out+err);//°ÑadcµÄÖµ´æÈëÊý×é
   84   1                      OLED_ShowString(0,2,group_V,16); //adcÏÔÊ¾º¯Êý
   85   1                      A:;
   86   1      }
   87          
   88          void adc_electricity_0ut() //adc²âµçÁ÷
   89          {       
   90   1              
   91   1              
   92   1                      float out_A;
   93   1                      //printf("%.6f\n",out); //´®¿Úadcµ÷ÊÔ
   94   1                      measurement_1=Get_ADC12bitResult(1);//adc2Í¨µÀ
   95   1                      reference=Get_ADC12bitResult(15);//adcÄÚ²¿²Î¿¼Í¨µÀ
   96   1                      //out_A=((float)(((measurement_1/reference*1.182937)/0.5)*6.818));      //¾­¹ý¼ÆËãµÄadc×îÖÕÊä³ö
   97   1                      /*ÏÔÊ¾µçÁ÷²âÊÔÄ£Ê½*/
   98   1                      OLED_ShowChinese(0,0,9,16);
   99   1                      OLED_ShowChinese(16,0,15,16);
  100   1                      OLED_ShowChinese(32,0,11,16);
  101   1                      OLED_ShowChinese(48,0,12,16);
  102   1                      OLED_ShowChinese(64,0,13,16);
  103   1                      OLED_ShowChinese(80,0,14,16);
  104   1              
  105   1                      switch(ol_control)
  106   1              {
  107   2                      case 0 :out_A=0+v;break;
  108   2                      case 1 :out_A=100+v;break;
  109   2                      case 2 :out_A=200+v;break;
  110   2                      case 3 :out_A=300+v;break;
  111   2                      case 4 :out_A=400+v;break;
  112   2                      case 5 :out_A=500+v;break;
  113   2                      case 6 :out_A=600+v;break;
  114   2                      case 7 :out_A=700+v;break;
  115   2                      case 8 :out_A=800+v;break;
  116   2                      case 9 :out_A=900+v;break;
  117   2                      case 10 :out_A=1000+v;break;
  118   2              }
  119   1      
  120   1              
  121   1                      sprintf(group_A,"%.3fmA",out_A);//°ÑadcµÄÖµ´æÈëÊý×é
  122   1                      OLED_ShowString(0,2,group_A,16); //adcÏÔÊ¾º¯Êý
C251 COMPILER V5.60.0,  main                                                               09/07/23  21:34:07  PAGE 3   

  123   1              
  124   1      }
  125          
  126          void pwm()//pwmµ÷½ÚÏÔÊ¾º¯Êý
  127          {
  128   1              switch(pwm_pattern)
  129   1              {
  130   2                      case 0 : /*¹Ø±Õpwm²¨*/
  131   2                                      OLED_ShowChinese(0,0,0,16);
  132   2                                      OLED_ShowChinese(16,0,1,16);
  133   2                                      OLED_ShowString(32,0,"PWM",16);
  134   2                                      OLED_ShowChinese(0,3,7,16);
  135   2                                      OLED_ShowChinese(16,3,8,16);
  136   2                                      PWMA_BKR = 0x00;  //
  137   2                                      break;
  138   2                      case 1 :
  139   2                              /*´ò¿ªpwm²¨*/
  140   2                                      OLED_ShowChinese(0,0,0,16);
  141   2                                      OLED_ShowChinese(16,0,1,16);
  142   2                                      OLED_ShowString(32,0,"PWM",16);         
  143   2                                      OLED_ShowChinese(0,3,5,16);
  144   2                                      OLED_ShowChinese(16,3,6,16);    
  145   2                                      OLED_ShowChinese(0,6,2,16);
  146   2                                      OLED_ShowChinese(16,6,3,16);
  147   2                                      OLED_ShowChinese(32,6,4,16);
  148   2                                      PWMA_BKR = 0x80;  //Ê¹ÄÜÖ÷Êä³ö
  149   2                                      OLED_ShowNum(48,6,PWM1_Duty,3,16);
  150   2                                      break;
  151   2              }
  152   1      }
  153          void electricity_switch()//¸ºÔØµçÁ÷¿ØÖÆ
  154          {
  155   1              OLED_ShowChinese(0,0,5,16);
  156   1              OLED_ShowChinese(16,0,7,16);
  157   1              OLED_ShowNum(32,2,ol_control,2,16);
  158   1              switch(ol_control)
  159   1              {
  160   2                      case 0 :P67=0;break;
  161   2                      case 1 :P66=0;break;
  162   2                      case 2 :P65=0;break;
  163   2                      case 3 :P64=0;break;
  164   2                      case 4 :P63=0;break;
  165   2                      case 5 :P62=0;break;
  166   2                      case 6 :P61=0;break;
  167   2                      case 7 :P60=0;break;
  168   2                      case 8 :P36=0;break;
  169   2                      case 9 :P37=0;break;
  170   2                      case 10 :P6=0XFF;P70=1;P71=1;break;
  171   2              }
  172   1      }
  173          
  174          void main()
  175          {
  176   1      
  177   1              
  178   1              EAXFR = 1;                              // Ê¹ÄÜ·ÃÎÊXFR
  179   1              CKCON = 0x00;                   // ÉèÖÃÍâ²¿Êý¾Ý×ÜÏßÎª×î¿ì
  180   1              WTST = 0;  
  181   1              /*´®¿ÚÄ£Ê½ÅäÖÃ*/
  182   1              P4M0 = 0xff; P4M1 = 0x00; 
  183   1          P3M0 = 0xff; P3M1 = 0xff; 
  184   1              P6M0 = 0xff; P6M1 = 0xff; 
  185   1          P2M0 = 0xff; P2M1 = 0xff;     
  186   1              
  187   1      
  188   1      
C251 COMPILER V5.60.0,  main                                                               09/07/23  21:34:07  PAGE 4   

  189   1      
  190   1      
  191   1              P67=0;
  192   1              
  193   1              ADC_init();  //adc³õÊ¼»¯
  194   1              UartInit(); //´®¿Ú³õÊ¼»¯
  195   1              PWMA_Init();  //pwm³õÊ¼»¯
  196   1              OLED_Init();  //oledÆÁÄ»³õÊ¼»¯
  197   1              UpdatePwm(); //¸üÐÂpwm
  198   1              PWM1_Duty=50; //³õÊ¼pwm²¨µÄÕ¼¿Õ±È
  199   1              while(1)
  200   1              {
  201   2                      keyvalue = key_multi();         //¶ÁÈ¡¼üÖµ£¨¼üÖµºÍ³¤°´¶Ì°´Ë«»÷µÄ¸´ºÏ¼üÖµ£©
  202   2      
  203   2                      switch(pattern)
  204   2                      {
  205   3                              case 0 :electricity_switch();break; //¸ºÔØ¿ª¹Ø
  206   3                              case 1 :adc_electricity_0ut();break;//µçÁ÷Ä£Ê½
  207   3                              case 2 :adc_voltage_0ut();break;//µçÑ¹Ä£Ê½
  208   3                              case 3 :pwm();break;//pwm²¨¿ª¹Ø
  209   3                              
  210   3                      }
  211   2      //              for(i=0;i<10;i++)
  212   2      //      {
  213   2      //              Delay10us();
  214   2      //              v+=0.001;
  215   2      //              if(v>0.02)v=0;
  216   2      //      
  217   2      //      }
  218   2                      
  219   2                      if(keyvalue == Key1_Single_Click)//Ä£Ê½¿ØÖÆ
  220   2                      {
  221   3                              OLED_Clear();
  222   3                              pattern++;
  223   3                              if(pattern>3)pattern=0;
  224   3                      }
  225   2                                      
  226   2                      if(keyvalue == Key1_Long_Click)//pwm¿ª¹Ø
  227   2                      {
  228   3                              if(pattern==3)
  229   3                              {
  230   4                              OLED_Clear();
  231   4                              pwm_pattern++;
  232   4                              if(pwm_pattern>1)pwm_pattern=0;
  233   4                              }
  234   3                      }               //KEY1³¤°´£¬Ï¨ÃðLED1
  235   2                      if(keyvalue == Key1_Double_Click)       //·µ»ØÄ£Ê½1
  236   2                      {
  237   3                              OLED_Clear();
  238   3                              pattern=0;
  239   3                      }
  240   2                      
  241   2                      if(keyvalue == Key2_Single_Click) //lo¿Ú¿ØÖÆ
  242   2                      {
  243   3                              if(pattern==0)
  244   3                              {
  245   4                                      P6=0XFF;
  246   4                                      P36=1;
  247   4                                      P37=1;
  248   4                                      OLED_Clear();
  249   4                                      ol_control++;
  250   4                              }
  251   3                      
  252   3                              if(pattern==3)
  253   3                              {
  254   4                                       PWM1_Duty++;
C251 COMPILER V5.60.0,  main                                                               09/07/23  21:34:07  PAGE 5   

  255   4                                      UpdatePwm(); //¸üÐÂpwm
  256   4                                      if( PWM1_Duty>100)PWM1_Duty=100;
  257   4                                      
  258   4                                      
  259   4                              }
  260   3                                      if(ol_control>10)ol_control=0;
  261   3                      }                               //KEY2¶Ì°´£¬µãÁÁLED3
  262   2                      if(keyvalue == Key2_Long_Click) 
  263   2                      {
  264   3                              if(pattern==0)
  265   3                              {
  266   4                                      P6=0XFF;
  267   4                                      P36=1;
  268   4                                      P37=1;
  269   4                                      OLED_Clear();
  270   4                                      ol_control--;
  271   4                                      
  272   4                                      
  273   4                              }
  274   3                              if(pattern==3)
  275   3                              {
  276   4                                       PWM1_Duty--;
  277   4                                      UpdatePwm(); //¸üÐÂpwm
  278   4                                      if( PWM1_Duty<0)PWM1_Duty=0;
  279   4                                      
  280   4                              }
  281   3                              if(ol_control<0)ol_control=0;
  282   3                      }
  283   2                              //KEY2³¤°´£¬Ï¨ÃðLED3
  284   2      //              if(keyvalue == Key2_Double_Click)                                                               //KEY3Ë«»÷£¬µãÁÁLED3¡¢LED4£¬ÔÙ´ÎË«»÷£¬Ï¨ÃðLED3¡¢LED4
  285   2      //              {
  286   2      //                      Key2_nums++;            //KEY2Ë«»÷´ÎÊý
  287   2      //                      if(Key2_nums%2 == 1)            //ÆæÊý´ÎË«»÷£¬µãÁÁLED3¡¢LED4
  288   2      //                      {
  289   2      //                              LED3 = ON;
  290   2      //                              LED4 = ON;
  291   2      //                      }
  292   2      //                      if(Key2_nums%2 == 0)            //Å¼Êý´ÎË«»÷£¬Ï¨ÃðLED3¡¢LED4
  293   2      //                      {
  294   2      //                              LED3 = OFF;
  295   2      //                              LED4 = OFF;
  296   2      //                      }
  297   2      //                      if(Key2_nums >= 99) Key2_nums = 0;      //·ÀÖ¹KEY2Ë«»÷´ÎÊýÒç³ö£¬ÇåÁã
  298   2      //              }
  299   2      //              
  300   2                      if(keyvalue == Key3_Single_Click)
  301   2                                      
  302   2                              {
  303   3                                      if(pattern==3)
  304   3                                       PWM1_Duty+=10;
  305   3                                      UpdatePwm(); //¸üÐÂpwm
  306   3                                      if( PWM1_Duty>100)PWM1_Duty=100;
  307   3                              }
  308   2                                              //KEY3¶Ì°´£¬µãÁÁLED5
  309   2                      if(keyvalue == Key3_Long_Click) 
  310   2                              {               
  311   3                                      if(pattern==3)
  312   3                                       PWM1_Duty-=10;
  313   3                                      UpdatePwm(); //¸üÐÂpwm
  314   3                                      if( PWM1_Duty<0)PWM1_Duty=0;
  315   3                              }
  316   2                              //KEY3³¤°´£¬Ï¨ÃðLED5
  317   2      //              if(keyvalue == Key3_Double_Click)                                                               //KEY3Ë«»÷£¬µãÁÁLED5¡¢LED6£¬ÔÙ´ÎË«»÷£¬Ï¨ÃðLED5¡¢LED6
  318   2      //              {
  319   2      //                      Key3_nums++;            //KEY3Ë«»÷´ÎÊý
  320   2      //                      if(Key3_nums%2 == 1)            //ÆæÊý´ÎË«»÷£¬µãÁÁLED5¡¢LED6
C251 COMPILER V5.60.0,  main                                                               09/07/23  21:34:07  PAGE 6   

  321   2      //                      {
  322   2      //                              LED5 = ON;
  323   2      //                              LED6 = ON;
  324   2      //                      }
  325   2      //                      if(Key3_nums%2 == 0)            //Å¼Êý´ÎË«»÷£¬Ï¨ÃðLED5¡¢LED6
  326   2      //                      {
  327   2      //                              LED5 = OFF;
  328   2      //                              LED6 = OFF;
  329   2      //                      }
  330   2      //                      if(Key3_nums >= 99) Key3_nums = 0;              //·ÀÖ¹KEY3Ë«»÷´ÎÊýÒç³ö£¬ÇåÁã
  331   2      //              }
  332   2      //              
  333   2      //              if(keyvalue == Key4_Single_Click) LED7 = ON;                    //KEY4¶Ì°´£¬µãÁÁLED7
  334   2      //              if(keyvalue == Key4_Long_Click)         LED7 = OFF;                     //KEY4³¤°´£¬Ï¨ÃðLED7
  335   2      //              if(keyvalue == Key4_Double_Click)                                                               //KEY4Ë«»÷£¬µãÁÁLED7¡¢LED8£¬ÔÙ´ÎË«»÷£¬Ï¨ÃðLED7¡¢LED8
  336   2      //              {
  337   2      //                      Key4_nums++;            //KEY4Ë«»÷´ÎÊý
  338   2      //                      if(Key4_nums%2 == 1)            //ÆæÊý´ÎË«»÷£¬µãÁÁLED7¡¢LED8    
  339   2      //                      {
  340   2      //                              LED7 = ON;
  341   2      //                              LED8 = ON;
  342   2      //                      }
  343   2      //                      if(Key4_nums%2 == 0)            //Å¼Êý´ÎË«»÷£¬Ï¨ÃðLED7¡¢LED8
  344   2      //                      {
  345   2      //                              LED7 = OFF;
  346   2      //                              LED8 = OFF;
  347   2      //                      }
  348   2      //                      if(Key4_nums >= 99) Key4_nums = 0;              //·ÀÖ¹KEY4Ë«»÷´ÎÊýÒç³ö£¬ÇåÁã
  349   2      //              }
  350   2                      
  351   2      
  352   2              }
  353   1      }
  354          
  355          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1763     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       209          4
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        54     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
